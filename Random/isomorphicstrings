/* 
Q group the isomorphic strings (EASY)

e.g.

input:
['aab', 'xxy', 'xyz', 'abc', 'def', 'xyx']

return:
[
['xyx'], 
['xyz', 'abc', 'def'], 
['aab', 'xxy']
]
*/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

void group(vector<string> str){
    unordered_map<string,vector<string>> res;
    for(auto s:str){
        string encoded="";
        unordered_map<char,string> map;
        for(int i=0;i<s.size();i++){
            if(map.find(s[i])!=map.end()){
            encoded+=map[s[i]];
            }else{
            map[s[i]]=to_string(i+1);
            // cout<<map[s[i]]<<endl;
            encoded+=map[s[i]];
            }
        }
        if(res.find(encoded)==res.end()) res[encoded]={};
        res[encoded].push_back(s);
    }
    
    for(auto x: res){
        cout<<x.first<<": ";
        for(auto y:x.second){
            cout<<y<<" ";
        }
        cout<<endl;
    }
}
int main()
{
    group({"aab", "xxy", "xyz", "abc", "def", "xyx"});
    return 0;
}
